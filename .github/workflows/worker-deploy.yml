name: Deploy Worker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Install dependencies
        run: |
          pnpm install
          pnpm i -g wrangler
          sudo apt-get update && sudo apt-get install -y jq

      - name: Publish
        run: |
          cd packages/status-worker/
          [ -z ${{secrets.SECRET_SLACK_WEBHOOK_URL}} ] && echo ${{secrets.SECRET_SLACK_WEBHOOK_URL}} | npx wrangler secret put "SECRET_SLACK_WEBHOOK_URL"
          [ -z ${{secrets.SECRET_TELEGRAM_API_TOKEN}} ] && echo ${{secrets.SECRET_TELEGRAM_API_TOKEN}} | npx wrangler secret put "SECRET_TELEGRAM_API_TOKEN"
          [ -z ${{secrets.SECRET_TELEGRAM_CHAT_ID}} ] && echo ${{secrets.SECRET_TELEGRAM_CHAT_ID}} | npx wrangler secret put "SECRET_TELEGRAM_CHAT_ID"
          [ -z ${{secrets.SECRET_DISCORD_WEBHOOK_URL}} ] && echo ${{secrets.SECRET_DISCORD_WEBHOOK_URL}} | npx wrangler secret put "SECRET_DISCORD_WEBHOOK_URL"
          wrangler kv:namespace create KV_STATUS_PAGEm || true
          export KV_NAMESPACE_ID=$(npx @cloudflare/wrangler@1 kv:namespace list 2> >(tee stderr.log >&2) | head -1 | node -pe "JSON.parse(fs.readFileSync('/dev/stdin').toString()).find(kv => kv.title.includes('KV_STATUS_PAGEm')).id")
          echo "[env.production]" >> wrangler.toml
          echo "kv_namespaces = [{binding=\"KV_STATUS_PAGEm\", id=\"${KV_NAMESPACE_ID}\"}]" >> wrangler.toml
          echo "crons = [\"*/5 * * * *\"]" >> wrangler.toml
          wrangler publish
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
